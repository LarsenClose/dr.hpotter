sudo python3 -m src
----
sudo python3 -m src -p httpd.yml
----
python3 -m unittest
coverage run --source=hpotter -m unittest
coverage report
----
pylint  ./src*
find . -name '*.py' -exec radon cc '{}' ';'
find . -name '*.py' -exec radon mi '{}' ';'
----
git push origin --delete fixparamikoversion
----
sqlite3 -list main.db .dump | more
----
sudo find . -name __pycache__ -exec rm -rf  '{}' ';'
docker build -t hpotter .
docker build --no-cache -t hpotter .
docker save -o hpotter.tar hpotter
docker load -i hpotter.tar
docker run -it --rm hpotter /bin/ash
sudo docker run -it -v /var/run/docker.sock:/var/run/docker.sock -p 22:22 -p 23:23 -p 80:80 hpotter
----
python3 setup.py sdist
python3 setup.py install
docker network create --internal my-net
docker run -it --name httpd -v apache2:/usr/local/apache2 --network my-net httpd
----
docker run -it --name try -v apache2:/usr/local/apache2 --network my-net httpd bash
----
docker build -t debian:telnetd . -f docker_files/telnetd/Dockerfile
docker build --no-cache -t debian:telnetd . -f docker_files/telnetd/Dockerfile
docker save -o debian:telnetd.tar debian:telnetd
docker load -i debian:telnetd.tar
docker run -p 23:23 debian:telnetd
---
docker build -t debian:sshd . -f docker_files/sshd/Dockerfile
docker run --hostname administrative --rm -p 22:22 debian:sshd

